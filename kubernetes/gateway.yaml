# Deployment for the containers/pods
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway-deployment
  labels:
    app: gateway-depl
spec:
  replicas: 1
  # replicas: 2
  selector:
    # Has to match the container label
    matchLabels:
      app: gateway-pod
  template:
    metadata:
      labels:
        app: gateway-pod
    spec:
      containers:
        - name: gateway-pod
          image: tobadarichard/gateway
          imagePullPolicy: Always
          env:
            - name: SERVER_PORT
              value: "8080"
            - name: INPT_LMS_URL_SERVICE_STOCKAGE
              value: "http://stockage-service"
            - name: INPT_LMS_URL_SERVICE_MESSAGERIE
              value: "http://messagerie-service"
            - name: INPT_LMS_URL_SERVICE_GESTIONCOMPTE
              value: "http://comptes-service"
            - name: INPT_LMS_URL_SERVICE_DEVOIR_
              value: "http://devoirs-service"
            - name: INPT_LMS_URL_SERVICE_COURS
              value: "http://cours-service"
            - name: INPT_LMS_URL_SERVICE_PUBLICATION
              value: "http://posts-service"
            - name: INPT_LMS_URL_FRONT_END
              value: "http://angular-service"
          ports:
            - containerPort: 8080
---
# Service for the containers/pods
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gateway-service
  name: gateway-service
spec:
  # Has to match the container label
  selector:
    app: gateway-pod
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
---
# Load balancer for the Angular containers/pods
apiVersion: v1
kind: Service
metadata:
  labels:
    app: gateway-lb-service
  name: gateway-lb-service
spec:
  # Has to match the container label
  selector:
    app: gateway-pod
  ports:
    - port: 80
      targetPort: 8080
      nodePort: 30001
      protocol: TCP
  type: LoadBalancer
